{"version":3,"sources":["components/Chevron/Chevron.js","components/Accordion/Accordion.js","App.js","Titles/titles.js","Contents/contents.js","reportWebVitals.js","index.js"],"names":["Chevron","className","width","fill","xmlns","viewBox","d","Accordion","title","content","useState","activeState","setActiveState","maxHeight","setMaxHeight","rotate","setRotate","contentRef","useRef","onClick","current","scrollHeight","ref","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAkBeA,MAhBf,YAA8C,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACnC,OACE,qBACEF,UAAWA,EACXC,MAAOA,EACPE,MAAM,6BACNC,QAAQ,cAJV,SAME,sBACEF,KAAMA,EACNG,EAAE,iS,MCwBKC,MAhCf,YAAwC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAAW,EACCC,mBAAS,IADV,mBAC9BC,EAD8B,KACjBC,EADiB,OAEHF,mBAAS,OAFN,mBAE9BG,EAF8B,KAEnBC,EAFmB,OAGTJ,mBAAS,mBAHA,mBAG9BK,EAH8B,KAGtBC,EAHsB,KAI/BC,EAAaC,iBAAO,MAW1B,OACE,sBAAKjB,UAAU,qBAAf,UACE,yBAAQA,UAAS,oBAAeU,GAAeQ,QAX3B,WACtBP,EAA+B,KAAhBD,EAAqB,SAAW,IAC/CG,EACkB,KAAhBH,EAAA,UAAwBM,EAAWG,QAAQC,aAA3C,MAA8D,OAEhEL,EACkB,WAAhBL,EAA2B,kBAAoB,2BAK/C,UACE,mBAAGV,UAAU,mBAAb,SAAiCO,IACjC,cAAC,EAAD,CAASP,UAAWc,EAAQb,MAAO,GAAIC,KAAK,eAE9C,qBACEF,UAAU,qBACVqB,IAAKL,EACLM,MAAO,CAAEV,UAAU,GAAD,OAAKA,IAHzB,SAKE,qBAAKZ,UAAU,kBAAf,SAAkCQ,UCf3Be,EAVH,kBACV,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWO,MCPO,2BDOQC,QEPN,8KFQpB,cAAC,EAAD,CAAWD,MCPO,gBDOQC,QENN,0eFOpB,cAAC,EAAD,CAAWD,MCPO,sBDOQC,QELN,4YFMpB,cAAC,EAAD,CAAWD,MCPO,iBDOQC,QEJN,idFKpB,cAAC,EAAD,CAAWD,MCPO,mBDOQC,QEHN,+QCITgB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9997f4d7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Chevron({ className, width, fill }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      width={width}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 320 512\"\r\n    >\r\n      <path\r\n        fill={fill}\r\n        d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Chevron;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Chevron from \"../Chevron/Chevron\";\r\nimport \"./accordion.css\";\r\n\r\nfunction Accordion({ title, content }) {\r\n  const [activeState, setActiveState] = useState(\"\");\r\n  const [maxHeight, setMaxHeight] = useState(\"0px\");\r\n  const [rotate, setRotate] = useState(\"accordion__icon\");\r\n  const contentRef = useRef(null);\r\n\r\n  const toggleAccordion = () => {\r\n    setActiveState(activeState === \"\" ? \"active\" : \"\"); //* меняем состояние activeState с \"\" на 'active' и наоборот\r\n    setMaxHeight(\r\n      activeState === \"\" ? `${contentRef.current.scrollHeight}px` : \"0px\"\r\n    );//* меняем css max-height сo \"scrollHeight\" на '0px' и наоборот\r\n    setRotate(\r\n      activeState === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\r\n    );//* добавляем rotate когда active\r\n  };\r\n  return (\r\n    <div className=\"accordion__section\">\r\n      <button className={`accordion ${activeState}`} onClick={toggleAccordion}>\r\n        <p className=\"accordion__title\">{title}</p>\r\n        <Chevron className={rotate} width={14} fill=\"#34495e\" />\r\n      </button>\r\n      <div\r\n        className=\"accordion__content\"\r\n        ref={contentRef}\r\n        style={{ maxHeight: `${maxHeight}` }}\r\n      >\r\n        <div className=\"accordion__text\">{content}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","\nimport Accordion from \"./components/Accordion/Accordion\";\nimport { title1, title2, title3, title4, title5 } from \"./Titles/titles\";\nimport { content1, content2, content3, content4, content5} from \"./Contents/contents\";\n\nconst App = () => (\n  <div className=\"app\">\n    <Accordion title={title1} content={content1} />\n    <Accordion title={title2} content={content2} />\n    <Accordion title={title3} content={content3} />\n    <Accordion title={title4} content={content4} />\n    <Accordion title={title5} content={content5} />\n  </div>\n);\n\nexport default App;\n","export const title1 = \"What is Web Development?\"\r\nexport const title2 = \"What is HTML?\"\r\nexport const title3 = \"What is Javascript?\"\r\nexport const title4 = \"What is React?\"\r\nexport const title5 = \"What is Node.js?\"\r\n","export const content1 = \"Web development refers to building, creating, and maintaining websites. It includes aspects such as web design, web publishing, web programming, and database management.\"\r\n\r\nexport const content2 = \"Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\"\r\n\r\nexport const content3 = \"JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved.\"\r\n\r\nexport const content4 = \"React is a JavaScript library, and so we’ll assume you have a basic understanding of the JavaScript language. If you don’t feel very confident, we recommend going through a JavaScript tutorial to check your knowledge level and enable you to follow along this guide without getting lost. It might take you between 30 minutes and an hour, but as a result you won’t have to feel like you’re learning both React and JavaScript at the same time.\"\r\n\r\nexport const content5 = \"Node.js is a server-side JavaScript run-time environment. It's open-source, including Google's V8 engine, libuv for cross-platform compatibility, and a core library. Notably, Node.js does not expose a global window object, since it does not run within a browser.\"\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}